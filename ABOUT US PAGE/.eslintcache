[{"C:\\Users\\Saim\\Downloads\\Donate-Frontend\\src\\index.js":"1","C:\\Users\\Saim\\Downloads\\Donate-Frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Saim\\Downloads\\Donate-Frontend\\src\\App.js":"3","C:\\Users\\Saim\\Downloads\\Donate-Frontend\\src\\components\\header.js":"4","C:\\Users\\Saim\\Downloads\\Donate-Frontend\\src\\components\\footer.js":"5","C:\\Users\\Saim\\Downloads\\Donate-Frontend\\src\\components\\donate.js":"6","C:\\Users\\Saim\\Downloads\\Donate-Frontend\\src\\components\\websitetext.js":"7","C:\\Users\\Saim\\Downloads\\Donate-Frontend\\src\\components\\home.js":"8","C:\\Users\\Saim\\Downloads\\Donate-Frontend\\src\\components\\paypal.js":"9","C:\\Users\\Saim\\Downloads\\Donate-Frontend\\src\\components\\donate_form.js":"10","C:\\Users\\Saim\\Downloads\\Donate-Frontend\\src\\components\\login.js":"11","C:\\Users\\Saim\\Downloads\\Donate-Frontend\\src\\components\\register.js":"12","C:\\Users\\Saim\\Downloads\\Donate-Frontend\\src\\components\\About.js":"13"},{"size":690,"mtime":1615210768000,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1615210768000,"results":"16","hashOfConfig":"15"},{"size":1072,"mtime":1615408043479,"results":"17","hashOfConfig":"15"},{"size":1733,"mtime":1615407934467,"results":"18","hashOfConfig":"15"},{"size":3768,"mtime":1615210768000,"results":"19","hashOfConfig":"15"},{"size":7738,"mtime":1615407718274,"results":"20","hashOfConfig":"15"},{"size":1439,"mtime":1615210768000,"results":"21","hashOfConfig":"15"},{"size":18193,"mtime":1615210768000,"results":"22","hashOfConfig":"15"},{"size":815,"mtime":1615210768000,"results":"23","hashOfConfig":"15"},{"size":11109,"mtime":1615210768000,"results":"24","hashOfConfig":"15"},{"size":7160,"mtime":1615210768000,"results":"25","hashOfConfig":"15"},{"size":15852,"mtime":1615210768000,"results":"26","hashOfConfig":"15"},{"size":1682,"mtime":1615410750037,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1g5qz3g",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Saim\\Downloads\\Donate-Frontend\\src\\index.js",[],"C:\\Users\\Saim\\Downloads\\Donate-Frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Saim\\Downloads\\Donate-Frontend\\src\\App.js",["62","63"],"C:\\Users\\Saim\\Downloads\\Donate-Frontend\\src\\components\\header.js",["64","65","66","67","68","69","70"],"C:\\Users\\Saim\\Downloads\\Donate-Frontend\\src\\components\\footer.js",["71","72","73","74","75","76","77","78","79","80","81","82","83"],"import donate from '../images/donate.jpg';\n//footer class includes all the information for the footer of SaveFoodie \n//web applicattion \n// Auther: Naveed Nazamy\nfunction Footer() {\n  return (\n    // footer division \n    <footer className=\"site-footer\">\n      <div className=\"container\">\n        \n        {/* first column in the footer */}\n        <div className=\"row\">    \n          <div className=\"col-xs-6 col-md-2 \">\n          <a href=\"#\">\n            <h6 className=\"text-white\">Our Mission</h6></a>\n            <ul className=\"footer-links\">\n              {/* column items */}\n              <li><a className=\"text-white\" href=\"#\" >Find Near Food Banks</a></li>\n              <li><a className=\"text-white\" href=\"#\">Available Support</a></li>\n              <li><a className=\"text-white\" href=\"#\">Recipes</a></li>\n             \n            </ul>\n          </div>\n\n            {/* second column in the footer */}\n          <div className=\"col-xs-6 col-md-2 \">\n            <a href=\"#\">\n            <h6 className=\"text-white\">Help</h6>\n            </a>\n            {/* second column items */}\n            <ul className=\"footer-links\">\n              <li><a href=\"home.js\" className=\"text-white\">Registration Help</a></li>\n              <li><a href=\"#\" className=\"text-white\">Get In Touch</a></li>\n              \n            </ul>\n          </div>\n\n            {/* third column in the footer */}\n          <div className=\"col-xs-6 col-md-2 \">\n          <a href=\"#\">\n            <h6 className=\"text-white\">Get Involved</h6>\n            </a>\n            {/* third column items */}\n            <ul className=\"footer-links\">\n              <li><a href=\"#\" className=\"text-white\">Fundraise</a></li>\n              <li><a href=\"#\" className=\"text-white\">Campaigns</a></li>      \n            </ul>\n          </div>\n\n            {/* fourth column in the footer */}\n          <div className=\"col-xs-6 col-md-2 \">\n          <a href=\"#\">\n            {/* fourth column items */}\n            <h6 className=\"text-white\" href=\"#\">About Us</h6></a>\n            <ul className=\"footer-links\">\n              <li><a href=\"#\" className=\"text-white\">Our Plan</a></li>\n              <li><a href=\"#\" className=\"text-white\">Our Story</a></li>\n             \n            </ul>\n          </div>\n            {/* fifth column for donation  */}\n          <div className=\"col-xs-6 col-md-4 \">\n            <h6 className=\"text-white \">Donate Here:</h6>\n            <div className=\"col-8 col-xs-11 col-sm-11 offset-1\">\n              {/* fifth column buttons for donation */}\n            <button className=\"btn  btn-success\">\n              £15\n              </button>\n              <button className=\"btn offset-1 btn-success\">\n              £25\n              </button>\n              <button className=\"btn offset-1 btn-success\">\n              £35\n              </button>\n              {/* input text area for donation amount */}\n              <input \n                    type=\"text\" \n                    name=\"donate\"\n                    className=\"form-control col-8 offset-2 col-sm-8\" \n                    required=\"required\"\n              />\n              {/* donation button */}\n              <button className=\"btn btn-success \">\n                Donate\n              </button>\n            </div>                    \n          </div>\n        </div>         \n      </div>\n      <hr/>\n      {/* copy right section after the footer */}\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12 col-sm-12 col-xs-12\">\n            <p className=\"copyright-text text-white\">Copyright &copy; 2020 All Rights Reserved by  &nbsp;\n              <b>SaveFoodie</b>\n            </p>\n          </div>\n        </div>\n      </div>\n</footer>\n  );\n}\n\nexport default Footer;\n",["84","85"],"C:\\Users\\Saim\\Downloads\\Donate-Frontend\\src\\components\\donate.js",["86","87","88","89","90"],"import React from \"react\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport logo from \"../images/logo.png\";\nimport logo1 from \"../images/logo2.png\";\nimport logo2 from \"../images/food_1.jpg\";\nimport donation_1 from \"../images/donation_1.jpg\";\nimport donation_2 from \"../images/donation_2.jpg\";\nimport donation_4 from \"../images/donation_4.jpg\";\nimport donation_7 from \"../images/donation_7.jpeg\";\nimport Doante1 from \"../images/Donate1.jpg\";\nimport PayPal from \"./paypal\";\nimport Donate from \"./donate_form\";\nimport \"./donate.css\";\n\nimport { Card, Container, Row, Col, Button } from \"react-bootstrap\";\n\nfunction donate() {\n  return (\n    <div>\n      <div className=\"bg-light-green mt-1 round-border\">\n        <h4 className=\"pb-4 pt-4\">\n          JOINING OUR MISSION IS THE MOST IMPACTFUL WAY TO GIVE\n        </h4>\n      </div>\n\n      {/* Image Slider */}\n      <Carousel>\n        <Carousel.Item>\n          <img className=\"d-block w-100\" src={donation_4} alt=\"First slide\" />\n        </Carousel.Item>\n        <Carousel.Item>\n          <img className=\"d-block w-100\" src={donation_2} alt=\"Third slide\" />\n        </Carousel.Item>\n        <Carousel.Item>\n          <img className=\"d-block w-100\" src={logo2} alt=\"Third slide\" />\n        </Carousel.Item>\n        <Carousel.Item>\n          <img className=\"d-block w-100\" src={donation_1} alt=\"Third slide\" />\n        </Carousel.Item>\n      </Carousel>\n\n      <hr></hr>\n\n      {/* Division for Quote */}\n      <div style={{ margin: \"5%\" }}>\n        <h4 className=\"pb-4 pt-4\" style={{ color: \"red\" }}>\n          <b>\n            HELP US SUPPORT FOOD BANKS TO PROVIDE PRACTICAL SUPPORT <br />\n            TO PEOPLE IN CRISIS & CAMPAIGN FOR A UK WITHOUT <br /> THE NEED FOR\n            FOOD BANKS\n          </b>\n        </h4>\n      </div>\n      <hr></hr>\n      {/* Division for Card */}\n      <div className=\"container-fluid row\">\n        {/* Division for Card-1 */}\n        <div className=\"col-lg-6 col-md-6 col-xs-12 col-sm-12\">\n          <Card bg={\"light\"}>\n            <Card.Header style={{ background: \"#7fb75d\", fontSize: \"2rem\" }}>\n              <b>Donate To Help Kids And Families In Need</b>\n            </Card.Header>\n            <Card.Body>\n              <Card.Title>\n                When you join SaveFoodie as a donor, you become someone we can\n                count on to help families facing hunger. You also receive\n                exclusive information and updates on critical hunger issues such\n                as reducing food waste and improving summer meal programs for\n                children.\n              </Card.Title>\n              <hr />\n              <Card.Text>\n                <b>How does SaveFoodie work to end hunger?</b>\n                <br />\n                For decades, the number of people living with hunger had been\n                declining, but the changing climate, entrenched conflict and\n                economic slowdowns are now making hunger worse.\n                <b style={{ color: \"red\" }}>\n                  Food insecurity is a global issue affecting 820 million people\n                  around the world. As a nation, we know it isn’t right that\n                  anyone should be left hungry or living in extreme poverty. But\n                  whilst we work for long-term change, our network of food banks\n                  provides emergency food and compassionate, dignified support\n                  to people locked in crisis.\n                </b>\n                The services provided by food banks may vary from area to area\n                as they react to the needs of their community to provide help\n                and support to local people in crisis.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </div>\n        {/* Division for Card-2 */}\n        <div className=\"col-lg-6 col-md-6 col-xs-12 col-sm-12\">\n          <div>\n            <Card style={{ width: \"100%\", height: \"28.6rem\" }} bg={\"light\"}>\n              <Card.Img\n                variant=\"top\"\n                src={donation_7}\n                style={{ width: \"100%\", height: \"50%\" }}\n              />\n              <Card.Body>\n                <Card.Title>\n                  YOUR GIFT CREATES A RELIABLE SOURCE OF FUNDING YEAR-ROUND TO\n                  HELP PROVIDE MEALS TO FAMILIES FACING HUNGER.\n                </Card.Title>\n              </Card.Body>\n            </Card>\n          </div>\n        </div>\n      </div>\n      <hr></hr>\n      {/* Division for Donation Quote */}\n      <div style={{ margin: \"0%\", background: \"#ffd24f\", textAlign: \"left\" }}>\n        <div className=\"pb-4 pt-4\" style={{ marginLeft: \"2%\" }}>\n          <h4>\n            Choose Gift Aid and increase the value of your donation to\n            <br /> <b>£8.75 at</b> at <b>no extra cost to you</b>\n          </h4>\n          <p>\n            I am a UK taxpayer and I agree to ActionAid claiming tax on all\n            donations I make from today and during the four years prior to this\n            date. Please treat my donations as Gift Aid donations{\" \"}\n          </p>\n          <p>\n            I understand that if I pay less Income Tax and/or Capital Gains Tax\n            than the amount of Gift Aid claimed on all my donations in the tax\n            year it is my responsibility to pay any difference. ActionAid will\n            reclaim 25p of tax on every £1 that has been given. Gift Aid money\n            is used around the world wherever the need is greatest.\n          </p>\n        </div>\n      </div>\n\n      <div>\n        {/* Division for Donation Form */}\n        <div>\n          <Donate />\n        </div>\n      </div>\n      <hr></hr>\n      {/* Division for Donation Quotes */}\n      <div style={{ margin: \"5%\" }}>\n        <h4 className=\"pb-4 pt-4\" style={{ color: \"red\" }}>\n          <b>\n            {/* Logo Image */}\n            <img src={logo} className=\"img-fluid logo-img\" />\n          </b>\n        </h4>\n\n        <Container fluid=\"md\">\n          <Row>\n            <Col md={4}>\n              {/* card-1 */}\n              <Card style={{ width: \"20rem\", background: \"#efefef\" }} id=\"cad\">\n                <Card.Body>\n                  <Card.Title style={{ color: \"#7fb75d\" }}>\n                    <b>Charity</b>\n                  </Card.Title>\n\n                  <Card.Text>\n                    \"Charity ... is kind, it is not easily provok’d, it thinks\n                    no evil, it believes all things, hopes all things.\"\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col md={4}>\n              {/* card-2 */}\n              <Card style={{ width: \"20rem\", background: \"#efefef\" }} id=\"cad\">\n                <Card.Body>\n                  <Card.Title style={{ color: \"#7fb75d\" }}>\n                    <b>Donate</b>\n                  </Card.Title>\n\n                  <Card.Text>\n                    \"Remember that the happiest people are not those getting\n                    more, but those giving more.\"\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col md={4}>\n              {/* card-3 */}\n              <Card style={{ width: \"20rem\", background: \"#efefef\" }} id=\"cad\">\n                <Card.Body>\n                  <Card.Title style={{ color: \"#7fb75d\" }}>\n                    <b>Food</b>\n                  </Card.Title>\n\n                  <Card.Text>\n                    \"There is food for everyone on this planet, but not everyone\n                    eats.\"<br></br>\n                    \"SAVE FOOD\"\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </div>\n  );\n}\n\nexport default donate;\n","C:\\Users\\Saim\\Downloads\\Donate-Frontend\\src\\components\\websitetext.js",["91"],"/*\nimport the login and register page\n\n*/\nimport Login from \"./login\";\nimport Register from \"./register\";\n\n/*\nThe websitetext.js includes the text after the header which explain what \nis the registration page about and how the user can register.\n// Auther: Naveed Nazamy\n*/\nfunction Websitetext() {\n  return (\n    <section className=\"container-fluid\">\n      {/* division for the header */}\n      <div className=\"bg-light-green mt-1 round-border\">\n        <h4 className=\"pb-4 pt-4\">\n          JOINING OUR MISSION IS THE MOST IMPACTFUL WAY TO GIVE\n        </h4>\n      </div>\n      <br />\n      <br />\n      {/* paragraph about the registration page */}\n      <p>\n        Register with us to become part of the SaveFoodie community where you\n        can have access to out blog, vouchers, volunteering program and can make\n        a swift donation to the centre you choose.\n      </p>\n      \n      \n      <p>helloo</p>\n\n      {/* division for the filling form paragraph */}\n      <div className=\"container-fluid row\">\n        <div className=\"col-lg-6 col-md-6 col-xs-12 col-sm-12\">\n          <br />\n\n          <p>Please fill in the below form to join SaveFoodie community:</p>\n          <p>helloo</p>\n        </div>\n\n        {/* login form */}\n        <div className=\"col-lg-6 col-md-6 col-xs-12 col-sm-12\">\n          <div>\n            <Login />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Websitetext;\n","C:\\Users\\Saim\\Downloads\\Donate-Frontend\\src\\components\\home.js",["92","93"],"import './register.css';\nimport React from 'react';\nimport { Component } from 'react';\n\nimport axios from 'axios';\n\nimport Modal from 'react-bootstrap/Modal';\n\nimport Button from 'react-bootstrap/Button';\n\nimport DateObject from \"react-date-object\";\n\n// Auther: Naveed Nazamy\nimport {\n    Link\n} from \"react-router-dom\";\n\nimport {\n    Redirect\n} from \"react-router-dom\";\n\n// base URL \nconst api = axios.create({\n    baseURL: `http://localhost:8080/`\n})\n\n// home is the extension of component\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n\n        console.log(this.props.location.userId);  \n        const theId = this.props.location.userId;\n        // initialize the following\n        this.state = {\n            show: false,\n            firstName: '',\n            lastName: '',\n            phonenumber: '',\n            dateOfBirth: '',\n            emailaddress: '',\n            fulladdress: '',\n            postCode: '',\n            password: '',\n            error: false,\n            errMsg: '',\n            successMsg: '',\n            success: false,\n            msg: '',\n            id: theId,\n            isEditDisabled: true \n        };\n        this.getUser()\n\n        // bind event to handleshow and handlehide function\n        this.handleShow = this.handleShow.bind(this);\n        this.handleHide = this.handleHide.bind(this);\n\n        \n        // bind the user data like firstname,lastname.. etc when button is pressed \n        this.onFirstNameChange = this.onFirstNameChange.bind(this);\n        this.onLastNameChange = this.onLastNameChange.bind(this);\n        this.onPhonenumberChange = this.onPhonenumberChange.bind(this);\n        this.onEmailaddressChange = this.onEmailaddressChange.bind(this);\n        this.onFulladdressChange = this.onFulladdressChange.bind(this);\n        this.onPostCodeChange = this.onPostCodeChange.bind(this);\n        this.onPasswordChange = this.onPasswordChange.bind(this);\n        this.onDateOfBirthChange = this.onDateOfBirthChange.bind(this);\n\n    \n      }\n\n    //   getting the user data like firstname, lastname, emailaddress....\n      getUser = async () => {\n        try {\n            //\n            let data = await api.get('/user/'+this.state.id).then(({ data }) => data);\n            // set the user data\n            this.setState({firstName: data.firstName});\n            this.setState({phonenumber: data.phonenumber});\n            this.setState({lastName: data.lastName});\n            console.log(\"Date of birth is: \"+data.dateOfBirth);\n            // date of birth \n            var d = new DateObject(this.state.dateOfBirth);\n            let dateFormated = d.format(\"YYYY-MM-dd\");\n            this.setState({dateOfBirth: dateFormated});\n            this.setState({emailaddress: data.emailaddress});\n            this.setState({fulladdress: data.fulladdress});\n            this.setState({postCode: data.postCode});\n            this.setState({repeatPassword: ''});\n            this.setState({password: data.password});    \n            \n        } \n        // catch for any error\n        catch (err) {\n            console.log(err);\n        }\n    }\n    // submit event\n      handleSubmit(event) {\n        event.preventDefault();\n     \n        // uk post code format using regular expression\n        let postalcode = this.state.postCode;\n        postalcode = postalcode.replace(/\\s/g, \"\");\n        var regex = /^(([gG][iI][rR] {0,}0[aA]{2})|(([aA][sS][cC][nN]|[sS][tT][hH][lL]|[tT][dD][cC][uU]|[bB][bB][nN][dD]|[bB][iI][qQ][qQ]|[fF][iI][qQ][qQ]|[pP][cC][rR][nN]|[sS][iI][qQ][qQ]|[iT][kK][cC][aA]) {0,}1[zZ]{2})|((([a-pr-uwyzA-PR-UWYZ][a-hk-yxA-HK-XY]?[0-9][0-9]?)|(([a-pr-uwyzA-PR-UWYZ][0-9][a-hjkstuwA-HJKSTUW])|([a-pr-uwyzA-PR-UWYZ][a-hk-yA-HK-Y][0-9][abehmnprv-yABEHMNPRV-Y]))) {0,}[0-9][abd-hjlnp-uw-zABD-HJLNP-UW-Z]{2}))$/;\n        // check for uk post code format \n        if(!regex.test(postalcode)) {\n            this.setState({err: true});\n            this.setState({errMsg: 'Enter valid post code'});\n            return null;\n        }\n\n        // uk mobile phone number format using regular expression\n        let p = this.state.phonenumber;\n        postalcode = p.replace(/\\s/g, \"\");\n        var regex = /^(?:(?:\\(?(?:0(?:0|11)\\)?[\\s-]?\\(?|\\+)44\\)?[\\s-]?(?:\\(?0\\)?[\\s-]?)?)|(?:\\(?0))(?:(?:\\d{5}\\)?[\\s-]?\\d{4,5})|(?:\\d{4}\\)?[\\s-]?(?:\\d{5}|\\d{3}[\\s-]?\\d{3}))|(?:\\d{3}\\)?[\\s-]?\\d{3}[\\s-]?\\d{3,4})|(?:\\d{2}\\)?[\\s-]?\\d{4}[\\s-]?\\d{4}))(?:[\\s-]?(?:x|ext\\.?|\\#)\\d{3,4})?$/;\n        // check for mobile phone format \n        if(!regex.test(p)) {\n            this.setState({err: true});\n            this.setState({errMsg: 'Enter a valid phone number'});\n            return null;\n        }\n\n        // email validation\n      \n\n        // \n//       \n        // constant values for user\n        const user = {\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            emailaddress: this.state.emailaddress,\n            phonenumber: this.state.phonenumber,\n            fulladdress: this.state.fulladdress,\n            password: this.state.password,\n            postCode: this.state.postCode,\n            dateOfBirth: this.state.dateOfBirth,\n        }\n        console.log(user);\n        // axios library to call the put method to update the user data\n        axios({\n            method: \"PUT\",\n            url: \"http://localhost:8080/update/\"+this.state.id,\n            data: user,\n        }).then((response) => {\n            console.log(response.status);\n            // if the information is entered correct\n            if (response.status === 201 || response.status === 200) {\n                // showing the handleshow event as the following\n                this.handleShow(\"Thank you! Your account has been updated successfully!\")\n                this.getUser();\n            } else {\n                \n                console.log(response.status);\n                alert(response)\n            }\n            // catch for any error if there is then show error message\n        }).catch((error)=> {\n                const err = error\n                if (err.response) {\n                    this.setState({err: true})\n                    this.setState({errMsg:err.response.data })\n                   console.log(err.response.status)\n                   console.log(err.response.data)\n                }\n             \n        })\n\n    }\n\n    // handle hide event \n    handleHide() {\n        console.log(\"okay\");\n        this.setState({ show: false });\n    }\n    // hanble show event which shows a message\n    handleShow(daata) {\n        this.setState({msg: daata});\n        this.setState({ show: true });\n    }\n\n    // event for date of birth \n      onDateOfBirthChange(event) {\n        this.setState({dateOfBirth: event.target.value});\n        this.setState({err: false})\n        this.setState({success: false})\n\n      }\n    //   event for password\n      onPasswordChange(event) {\n          this.setState({password: event.target.value});\n          this.setState({err: false})\n          \n        this.setState({success: false})\n      }\n    //   event for repeat password\n      onRepeatPasswordChange(event) {\n        this.setState({repeatPassword: event.target.value});\n        \n        this.setState({success: false})\n        this.setState({err: false})\n      }\n    //   event for post code\n      onPostCodeChange(event) {\n        this.setState({postCode: event.target.value});\n        \n        this.setState({success: false})\n        this.setState({err: false})\n      }\n    //   event for full address\n      onFulladdressChange(event) {\n        this.setState({fulladdress: event.target.value});\n        \n        this.setState({success: false})\n        this.setState({err: false})\n      }\n    //   event for email address\n      onEmailaddressChange(event) {\n        this.setState({emailaddress: event.target.value});\n        \n        this.setState({success: false})\n        this.setState({err: false})\n      }\n    //   event for phone number\n      onPhonenumberChange(event) {\n        this.setState({phonenumber: event.target.value});\n        \n        this.setState({success: false})\n        this.setState({err: false})\n      }\n    //   event for last name\n      onLastNameChange(event) {\n        this.setState({lastName: event.target.value});\n        \n        this.setState({success: false})\n        this.setState({err: false})\n      }\n    //   eventfor first name\n      onFirstNameChange(event) {\n        this.setState({firstName: event.target.value});\n        \n        this.setState({success: false})\n        this.setState({err: false})\n      }\n      \n\n        // \n    render() {\n        if (this.state.id === undefined) {\n            console.log(\"I am not logged in\"+this.state.id);\n            return <Redirect to=\"/\" />;\n        }\n\n        return (\n            <div className=\"main\">\n                {/* hise the model and brings back the main screen  */}\n<Modal show={this.state.show} onHide={this.handleHide}>\n                    <Modal.Body>{this.state.msg}</Modal.Body>\n                    <Modal.Footer>\n                        {/* close button */}\n                        <Button variant=\"secondary\" onClick={this.handleHide}>\n                            Close\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n    \n                {/* user welcome division */}\n            <div className=\"bg-light-green mt-1 round-border\">\n                <h4 className=\"pb-4 pt-4\">\n                    {/* show the user first name when the user loged in into the \n                    system */}\n                    WELCOME {this.state.firstName}\n                </h4>\n            </div>\n            {/* if any error during the sign up */}\n            <div className=\"col-9 col-lg-9 col-xs-12 col-sm-12 container-2\">\n                <div className=\"sign-up-content\">\n                { this.state.err === true &&\n                    <div className=\"alert alert-danger\" role=\"alert\">\n                        {this.state.errMsg} \n                    </div>\n\n                }\n                {/* division form for the user profile information */}\n                    <form onSubmit={this.handleSubmit.bind(this)} className=\"signup-form\">\n                        <h3 className=\"form-title\">User Profile \n                        \n                        <Link to=\"/dashboard\" className=\"logout-btn\">\n                                <button className=\"btn btn-danger\"> Logout</button>\n                            </Link> \n                            \n                        </h3>\n                        <br/>\n                            {/* first name input box */}\n                        <div className=\"form-textbox\">\n                            <label htmlFor=\"name\">First Name</label>\n                            <input type=\"text\" \n                                name=\"name\" \n                                id=\"name\" \n                                value={this.state.firstName}\n                                required=\"required\"\n                                onChange={this.onFirstNameChange}\n                                disabled={this.state.isEditDisabled}\n                                />\n                                \n                        </div>\n                        {/* last name input box */}\n                        <div className=\"form-textbox\">\n                            <label htmlFor=\"name\">Last name</label>\n                            <input \n                                type=\"text\" \n                                value={this.state.lastName}\n                                name=\"lastname\" \n                                // is disabled when the edit button is disabled\n                                disabled={this.state.isEditDisabled}\n                                id=\"lastname\" \n                                required=\"required\"\n                                onChange={this.onLastNameChange}\n                                />\n                        </div>\n                        {/* email input box */}\n                        <div className=\"form-textbox\">\n                            <label htmlFor=\"emailaddress\">Email</label>\n                            <input \n                                type=\"email\" \n                                name=\"emailaddress\" \n                                // the input box is disabled when the edit button is disabled\n                                disabled={this.state.isEditDisabled}\n                                value={this.state.emailaddress}\n                                id=\"emailaddress\" \n                                required=\"required\"\n                                onChange={this.onEmailaddressChange}/>\n                        </div>\n                        {/* phone number input box */}\n                        <div className=\"form-textbox\">\n                            <label htmlFor=\"phonenumber\">Phone</label>\n                            <input \n                                type=\"text\" \n                                name=\"phonenumber\" \n                                id=\"phonenumber\"\n                                // the input box is disabled \n                                disabled={this.state.isEditDisabled}\n                                \n                                value={this.state.phonenumber}\n                                required=\"required\"\n                                onChange={this.onPhonenumberChange}\n                                />\n                        </div>\n                \n                            {/* input box for date of birth */}\n                        <div className=\"form-textbox\">\n                            <label htmlFor=\"dob\">Date of birth</label>\n                            <input \n                                type=\"Date\" \n                                name=\"dob\" \n                                id=\"dob\"\n                                // input box is disabled\n                                disabled={this.state.isEditDisabled}\n                                value={this.state.dateOfBirth}\n                                required=\"required\"\n                                onChange={this.onDateOfBirthChange}\n                                />\n                        </div>\n    \n                        {/* input box for full address */}\n                        <div className=\"form-textbox\">\n                            <label htmlFor=\"fulladdress\">Address</label>\n                            <input \n                                type=\"text\" \n                                name=\"fulladdress\" \n                                // the input box is disabled\n                                disabled={this.state.isEditDisabled}\n                                \n                                value={this.state.fulladdress}\n                                id=\"fulladdress\"\n                                required=\"required\"\n                                onChange={this.onFulladdressChange}\n                                />\n                        </div>\n    \n                        {/* input box for post code */}\n                        <div className=\"form-textbox\">\n                            <label htmlFor=\"postCode\">Post code</label>\n                            <input \n                                type=\"text\" \n                                name=\"postCode\" \n                                // the input box is disabled when the edit button is disabled\n                                disabled={this.state.isEditDisabled}\n                                value={this.state.postCode}\n                                id=\"postCode\"\n                                required=\"required\"\n                                onChange={this.onPostCodeChange}\n                                />\n                        </div>\n                        {/* password input box  */}\n                        <div className=\"form-textbox\">\n                            <label htmlFor=\"password\">Password</label>\n                            <input \n                                type=\"password\" \n                                name=\"password\" \n                                // the password input box is disabled\n                                disabled={this.state.isEditDisabled}\n                                \n                                value={this.state.password}\n                                id=\"password\"\n                                required=\"required\"\n                                onChange={this.onPasswordChange}\n                                />\n                        </div>\n                        <br/>\n                        {/* division for edit and cancel button */}\n                        <div className=\"form-textbox mt-9\" >\n                        <button \n                                type=\"button\" \n                                name=\"submit\" \n                                onClick={()=> this.setState({isEditDisabled: !this.state.isEditDisabled})}\n                                className=\"submit \" \n                                 >\n                                     {\n                                         this.state.isEditDisabled === true &&\n                                            <span>Edit</span>\n                                     }\n                                     \n                                     {\n                                         this.state.isEditDisabled !== true &&\n                                            <span>Cancel</span>\n                                     }\n                                     \n                                     </button>\n                                                &nbsp;\n                            <button \n                            // update the user profile button \n                                type=\"submit\" \n                                name=\"submit\" \n                                className=\"submit\" \n                                 >\n                                     Update\n                                     </button>\n\n\n\n                        </div>\n                    </form>\n                </div>\n            </div>\n    \n        </div>\n        );\n    }\n\n}\n\nexport default Home;\n","C:\\Users\\Saim\\Downloads\\Donate-Frontend\\src\\components\\paypal.js",[],"C:\\Users\\Saim\\Downloads\\Donate-Frontend\\src\\components\\donate_form.js",["94","95","96"],"import \"./donate_form.css\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport axios from \"axios\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport PayPal from \"./paypal\";\nimport donation_8 from \"../images/donation_8.png\";\n\n\n/*\nthe above are the essential libraries.\n// Auther: Naveed Nazamy\n*/\n\n// register.js is the extension of component\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    //properties of the component\n    this.state = {\n      show: false,\n      firstName: \"\",\n      lastName: \"\",\n      phonenumber: \"\",\n     \n      emailaddress: \"\",\n      fulladdress: \"\",\n      postCode: \"\",\n     \n      error: false,\n      errMsg: \"\",\n      successMsg: \"\",\n      success: false,\n      msg: \"\",\n    };\n\n    //bind for showhandle and hidehandle\n    this.handleShow = this.handleShow.bind(this);\n    this.handleHide = this.handleHide.bind(this);\n\n    //bind for the following user data, change when a button is pressed\n    this.onFirstNameChange = this.onFirstNameChange.bind(this);\n    this.onLastNameChange = this.onLastNameChange.bind(this);\n    this.onPhonenumberChange = this.onPhonenumberChange.bind(this);\n    this.onEmailaddressChange = this.onEmailaddressChange.bind(this);\n    this.onFulladdressChange = this.onFulladdressChange.bind(this);\n    this.onPostCodeChange = this.onPostCodeChange.bind(this);\n   \n  }\n  \n\n  //   submit event\n  handleSubmit(event) {\n    event.preventDefault();\n\n    // post code uk format\n    let postalcode = this.state.postCode;\n    postalcode = postalcode.replace(/\\s/g, \"\");\n    var regex = /^(([gG][iI][rR] {0,}0[aA]{2})|(([aA][sS][cC][nN]|[sS][tT][hH][lL]|[tT][dD][cC][uU]|[bB][bB][nN][dD]|[bB][iI][qQ][qQ]|[fF][iI][qQ][qQ]|[pP][cC][rR][nN]|[sS][iI][qQ][qQ]|[iT][kK][cC][aA]) {0,}1[zZ]{2})|((([a-pr-uwyzA-PR-UWYZ][a-hk-yxA-HK-XY]?[0-9][0-9]?)|(([a-pr-uwyzA-PR-UWYZ][0-9][a-hjkstuwA-HJKSTUW])|([a-pr-uwyzA-PR-UWYZ][a-hk-yA-HK-Y][0-9][abehmnprv-yABEHMNPRV-Y]))) {0,}[0-9][abd-hjlnp-uw-zABD-HJLNP-UW-Z]{2}))$/;\n\n    //check for correct post code format\n    if (!regex.test(postalcode)) {\n      this.setState({ err: true });\n      this.setState({ errMsg: \"Enter a valid postal code\" });\n      return null;\n    }\n\n    //mobile number uk format\n    let p = this.state.phonenumber;\n    postalcode = p.replace(/\\s/g, \"\");\n    var regex = /^(?:(?:\\(?(?:0(?:0|11)\\)?[\\s-]?\\(?|\\+)44\\)?[\\s-]?(?:\\(?0\\)?[\\s-]?)?)|(?:\\(?0))(?:(?:\\d{5}\\)?[\\s-]?\\d{4,5})|(?:\\d{4}\\)?[\\s-]?(?:\\d{5}|\\d{3}[\\s-]?\\d{3}))|(?:\\d{3}\\)?[\\s-]?\\d{3}[\\s-]?\\d{3,4})|(?:\\d{2}\\)?[\\s-]?\\d{4}[\\s-]?\\d{4}))(?:[\\s-]?(?:x|ext\\.?|\\#)\\d{3,4})?$/;\n    // check for correct mobile phone format\n    if (!regex.test(p)) {\n      this.setState({ err: true });\n      this.setState({ errMsg: \"Enter a valid Phone Number!\" });\n      return null;\n    }\n\n    // check if the password is matching with the repeated password\n    if (this.state.password !== this.state.repeatPassword) {\n      this.setState({ err: true });\n      this.setState({ errMsg: \"Password does not match!\" });\n      return null;\n    }\n    // constant user data\n    const user = {\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      emailaddress: this.state.emailaddress,\n      phonenumber: this.state.phonenumber,\n      fulladdress: this.state.fulladdress,\n      password: this.state.password,\n      postCode: this.state.postCode,\n      dateOfBirth: this.state.dateOfBirth,\n    };\n\n    \n\n    console.log(user);\n    // axios library to access signup using POST method\n    axios({\n      method: \"POST\",\n      url: \"\",\n      data: user,\n    })\n      .then((response) => {\n        console.log(response.status);\n        <PayPal />\n        if (response.status === 201 || response.status === 200) {\n          // show the handle message when the account is registered successfully\n          this.handleShow(\n            \"Thank you! Your account has been registered successfully!\"\n          );\n          // reset the form for other entries\n          this.resetForm();\n        } else {\n          console.log(response.status);\n          alert(response);\n        }\n        // catch any errors when found show the error message reponse\n      })\n      .catch((error) => {\n        const err = error;\n        if (err.response) {\n          this.setState({ err: true });\n          this.setState({ errMsg: err.response.data });\n          console.log(err.response.status);\n          console.log(err.response.data);\n        }\n      });\n  }\n  handleClick(){\n    console.log(\"heloooo\")\n  }\n  // hide handle event\n  handleHide() {\n    console.log(\"okay\");\n    this.setState({ show: false });\n  }\n  // show handle event\n  handleShow(daata) {\n    this.setState({ msg: daata });\n    this.setState({ show: true });\n  }\n\n \n  //   post code event\n  onPostCodeChange(event) {\n    this.setState({ postCode: event.target.value });\n\n    this.setState({ success: false });\n    this.setState({ err: false });\n  }\n  //   full address event\n  onFulladdressChange(event) {\n    this.setState({ fulladdress: event.target.value });\n\n    this.setState({ success: false });\n    this.setState({ err: false });\n  }\n  //   email address event\n  onEmailaddressChange(event) {\n    this.setState({ emailaddress: event.target.value });\n\n    this.setState({ success: false });\n    this.setState({ err: false });\n  }\n  //   phone number event\n  onPhonenumberChange(event) {\n    this.setState({ phonenumber: event.target.value });\n    this.setState({ success: false });\n    this.setState({ err: false });\n  }\n  //   last name event\n  onLastNameChange(event) {\n    this.setState({ lastName: event.target.value });\n\n    this.setState({ success: false });\n    this.setState({ err: false });\n  }\n  //   first name event\n  onFirstNameChange(event) {\n    this.setState({ firstName: event.target.value });\n\n    this.setState({ success: false });\n    this.setState({ err: false });\n  }\n\n  //reset all the following form entries when the resetform() function is called.\n  resetForm() {\n    this.setState({ firstName: \"\" });\n    this.setState({ phonenumber: \"\" });\n    this.setState({ lastName: \"\" });\n    this.setState({ emailaddress: \"\" });\n    this.setState({ fulladdress: \"\" });\n    this.setState({ error: \"\" });\n    this.setState({ postCode: \"\" });\n    this.setState({ errMsg: \"\" });\n  }\n\n  //\n  render() {\n    return (\n      <div class=\"main\">\n        {/* model this hides the model and brings back the main screen*/}\n\n        <Modal show={this.state.show} onHide={this.handleHide}>\n          <Modal.Body>{this.state.msg}</Modal.Body>\n          <Modal.Footer>\n            {/* close button closes the model */}\n            <Button variant=\"secondary\" onClick={this.handleHide}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        {/*  */}\n        <div class=\"container container-2\">\n          <div class=\"sign-up-content\">\n            {this.state.err === true && (\n              <div class=\"alert alert-danger\" role=\"alert\">\n                {this.state.errMsg}\n              </div>\n            )}\n\n            {/* registration form */}\n            <form onSubmit={this.handleSubmit.bind(this)} class=\"signup-form\">\n              <h3 class=\"form-title\">Donate Here</h3>\n              <br />\n\n              <div className=\"row\" style={{padding:\"6.5px 6.5px\"}}>\n                <div className=\"col s12\">\n                  <div class=\"form-textbox1\">\n                    <label for=\"name\">First Name</label>\n                    <input\n                      type=\"text\"\n                      name=\"name\"\n                      id=\"name\"\n                      value={this.state.firstName}\n                      required=\"required\"\n                      // call the firstname change event\n                      onChange={this.onFirstNameChange}\n                      class=\"input1\"\n                    />\n                  </div>\n                </div>\n                <div className=\"col s12\">\n                  <div class=\"form-textbox1\">\n                    <label for=\"name\">Last name</label>\n                    <input\n                      type=\"text\"\n                      value={this.state.lastName}\n                      name=\"lastname\"\n                      id=\"lastname\"\n                      required=\"required\"\n                      // call teh last name change event\n                      onChange={this.onLastNameChange}\n                      class=\"input1\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              \n              \n\n              {/* email address input box */}\n              <div class=\"form-textbox1\">\n                <label for=\"email\">Email</label>\n                <input\n                  type=\"email\"\n                  name=\"emailaddress\"\n                  value={this.state.emailaddress}\n                  id=\"emailaddress\"\n                  required=\"required\"\n                  class=\"input1\"\n                  // call the email address change event\n                  onChange={this.onEmailaddressChange}\n                />\n              </div>\n              {/* mobile phone number input box */}\n              <div class=\"form-textbox1\">\n                <label for=\"phonenumber\">Phone</label>\n                <input\n                  type=\"text\"\n                  name=\"phonenumber\"\n                  id=\"phonenumber\"\n                  value={this.state.phonenumber}\n                  required=\"required\"\n                  class=\"input1\"\n                  // call the phone number event\n                  onChange={this.onPhonenumberChange}\n                />\n              </div>\n\n              {/* full address input box */}\n              <div class=\"form-textbox1\">\n                <label for=\"fulladdress\">Address</label>\n                <input\n                  type=\"text\"\n                  name=\"fulladdress\"\n                  value={this.state.fulladdress}\n                  id=\"fulladdress\"\n                  required=\"required\"\n                  class=\"input1\"\n                  // call the full address change event\n                  onChange={this.onFulladdressChange}\n                />\n              </div>\n\n              {/* post code input box */}\n              <div class=\"form-textbox1\">\n                <label for=\"postCode\">Post code</label>\n                <input\n                  type=\"text\"\n                  name=\"postCode\"\n                  value={this.state.postCode}\n                  id=\"postCode\"\n                  required=\"required\"\n                  class=\"input1\"\n                  // call the post code change event\n                  onChange={this.onPostCodeChange}\n                />\n              </div>\n\n              {/* register button division */}\n              <div class=\"form-textbox mt-3\" >\n                <button type=\"submit\" name=\"submit\" style={{border:\"None\" , width:\"40%\" ,background:\"none\"}}>\n                <img src={donation_8} className=\"img-fluid logo-img\" />\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","C:\\Users\\Saim\\Downloads\\Donate-Frontend\\src\\components\\login.js",["97","98","99","100"],"import './register.css';\nimport { Component } from 'react';\nimport donate from '../images/donate.jpg';\n// import important libraries.\n// Auther: Naveed Nazamy\n\n// axios library \nimport axios from 'axios';\nimport {\n    //redirect to another path \n    Redirect\n} from \"react-router-dom\";\n\n// login.js is the extension of component\nclass Login extends Component {\n\n\n    constructor(props) {\n        //call super (props) before any statement to avoid bugs\n        //call the react.component\n        super(props);\n        //properties of the component\n        this.state = {\n            emailaddress: '',\n            password: '',\n            error: false,\n            errMsg: '',\n            successMsg: '',\n            success: false,\n            isLoggedIn: false,\n            userId: null\n        };\n        // email address and password bind\n        this.onEmailaddressChange = this.onEmailaddressChange.bind(this);\n        this.onPasswordChange = this.onPasswordChange.bind(this);\n    }\n\n    // event for password when clicked\n    onPasswordChange(event) {\n        this.setState({ password: event.target.value });\n        this.setState({ err: false })\n        this.setState({ success: false })\n    }\n\n    //event for email address \n    onEmailaddressChange(event) {\n        this.setState({ emailaddress: event.target.value });\n        this.setState({ success: false })\n        this.setState({ err: false })\n    }\n\n    //event for submit \n    handleSubmit(event) {\n        event.preventDefault();\n        //uder email and password\n        const user = {\n            emailaddress: this.state.emailaddress,\n            password: this.state.password,\n        }\n        console.log(user);\n\n        //axios library for login using post method and the follwoing API\n        axios({\n            method: \"POST\",\n            url: \"http://localhost:8080/login\",\n            data: user,\n        }).then((response) => {\n            console.log(response.status);\n            // if the correct email and possword is entered\n            if (response.status === 201 || response.status === 200) {\n                console.log(response.data);\n                this.setState({userId: response.data.id})\n                this.setState({isLoggedIn: true});                \n            } else {\n                console.log(response.status);\n                alert(response)\n            }\n            //catch for any errors if found then show the error message data \n        }).catch((error) => {\n            const err = error\n            if (err.response) {\n                this.setState({ err: true })\n                this.setState({ errMsg: err.response.data })\n                console.log(err.response.status)\n                console.log(err.response.data)\n            }\n\n        })\n\n    }\n\n\n        // if the user is logged in then redirect\n    render() {\n        console.log(\"the value \"+this.state.isLoggedIn);\n        if (this.state.isLoggedIn === true) {\n            console.log(\"I am logged in\");\n            return <Redirect to={\n                {\n                    pathname: \"/home\",\n                    userId: this.state.userId\n                }\n            } />;\n\n        }\n\n        return (\n\n            // main division\n            <div class=\"main\">\n                <br /><br /><br />\n            {/* division for different payment methods */}\n                <div class=\"container container-2\">\n                    <div class=\"sign-up-content\">\n                        <h3 class=\"form-title\">How can you pay: </h3>\n                        <br />\n                        {/* credit card payment link */}\n                        <a href=\"#\">\n                           CREDIT CARD PAYMENT\n                </a>\n                        <h6>If you wish to pay by credit card</h6>\n\n                        <br />\n                        {/* debit card payment link */}\n                        <a href=\"#\">\n                            DEBIT CARD PAYMENT\n                </a>\n\n                        <h6>If you wish to pay by debit card</h6>\n                        <br />\n                        {/* internet banking payment link */}\n                        <a href=\"#\">\n                            INTERNET BANKING PAYMENT\n                </a>\n\n                        <h6>If you wish to pay by Internet Banking</h6>\n                    </div>\n                </div>\n                {/* donate button division  */}\n                <button className=\"btn btn-lg btn-success m-2\">\n                    Donate\n                </button>\n\n                \n                {/*  division for any error during the sign up*/}\n                <div class=\"container container-2\">\n                    <div class=\"sign-up-content\">\n                    { this.state.err === true &&\n                    <div class=\"alert alert-danger\" role=\"alert\">\n                        {this.state.errMsg}\n                    </div>\n                }\n                {/* login form for registered user */}\n                        <form onSubmit={this.handleSubmit.bind(this)} class=\"signup-form\">\n                            <h3 class=\"form-title\">User Login</h3>\n                            <h>For Registered Users Only:</h>\n                            <br />\n                            \n\n                            {/* email address input box */}\n                            <div class=\"form-textbox\">\n                                <label for=\"emailaddress\">Email</label>\n                                <input \n                                type=\"email\" \n                                name=\"emailaddress\" \n                                \n                                value={this.state.emailaddress}\n                                id=\"emailaddress\" \n                                required=\"required\"\n                                onChange={this.onEmailaddressChange}/>\n                                \n        </div>\n                            {/* password input box */}\n                            <div class=\"form-textbox\">\n                                <label for=\"password\">Password</label>\n                                <input \n                                type=\"password\" \n                                name=\"password\" \n                                \n                                value={this.state.password}\n                                id=\"password\"\n                                required=\"required\"\n                                onChange={this.onPasswordChange}\n                                />\n                        </div>\n                        {/* login button division */}\n                            <div class=\"form-textbox mt-3\">\n                            <button \n                                type=\"submit\" \n                                name=\"submit\" \n                                class=\"submit\" \n                                 >\n                                     Login\n                                     </button>\n\n                            </div>\n                        </form>\n                    </div>\n                </div>\n                <br />\n\n            </div>\n\n        );\n    }\n}\n\n\nexport default Login;\n","C:\\Users\\Saim\\Downloads\\Donate-Frontend\\src\\components\\register.js",["101","102"],"import './register.css';\nimport React from 'react';\nimport { Component } from 'react';\nimport axios from 'axios';\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\n\n/*\nthe above are the essential libraries.\n// Auther: Naveed Nazamy\n*/\n\n// register.js is the extension of component\nclass Register extends Component {\n\n    constructor(props) {\n        super(props);\n        //properties of the component\n        this.state = {\n            show: false,\n            firstName: '',\n            lastName: '',\n            phonenumber: '',\n            dateOfBirth: '',\n            emailaddress: '',\n            fulladdress: '',\n            postCode: '',\n            password: '',\n            repeatPassword: '',\n            error: false,\n            errMsg: '',\n            successMsg: '',\n            success: false,\n            msg: '',\n        };\n\n        //bind for showhandle and hidehandle  \n        this.handleShow = this.handleShow.bind(this);\n        this.handleHide = this.handleHide.bind(this);\n\n        \n        //bind for the following user data, change when a button is pressed \n        this.onFirstNameChange = this.onFirstNameChange.bind(this);\n        this.onLastNameChange = this.onLastNameChange.bind(this);\n        this.onPhonenumberChange = this.onPhonenumberChange.bind(this);\n        this.onEmailaddressChange = this.onEmailaddressChange.bind(this);\n        this.onFulladdressChange = this.onFulladdressChange.bind(this);\n        this.onPostCodeChange = this.onPostCodeChange.bind(this);\n        this.onPasswordChange = this.onPasswordChange.bind(this);\n        this.onRepeatPasswordChange = this.onRepeatPasswordChange.bind(this);\n        this.onDateOfBirthChange = this.onDateOfBirthChange.bind(this);\n\n    \n      }\n\n    //   submit event\n      handleSubmit(event) {\n        event.preventDefault();\n        \n        // post code uk format\n        let postalcode = this.state.postCode;\n        postalcode = postalcode.replace(/\\s/g, \"\");\n        var regex = /^(([gG][iI][rR] {0,}0[aA]{2})|(([aA][sS][cC][nN]|[sS][tT][hH][lL]|[tT][dD][cC][uU]|[bB][bB][nN][dD]|[bB][iI][qQ][qQ]|[fF][iI][qQ][qQ]|[pP][cC][rR][nN]|[sS][iI][qQ][qQ]|[iT][kK][cC][aA]) {0,}1[zZ]{2})|((([a-pr-uwyzA-PR-UWYZ][a-hk-yxA-HK-XY]?[0-9][0-9]?)|(([a-pr-uwyzA-PR-UWYZ][0-9][a-hjkstuwA-HJKSTUW])|([a-pr-uwyzA-PR-UWYZ][a-hk-yA-HK-Y][0-9][abehmnprv-yABEHMNPRV-Y]))) {0,}[0-9][abd-hjlnp-uw-zABD-HJLNP-UW-Z]{2}))$/;\n        \n        //check for correct post code format\n        if(!regex.test(postalcode)) {\n            this.setState({err: true});\n            this.setState({errMsg: 'Enter a valid postal code'});\n            return null;\n        }\n\n        //mobile number uk format\n        let p = this.state.phonenumber;\n        postalcode = p.replace(/\\s/g, \"\");\n        var regex = /^(?:(?:\\(?(?:0(?:0|11)\\)?[\\s-]?\\(?|\\+)44\\)?[\\s-]?(?:\\(?0\\)?[\\s-]?)?)|(?:\\(?0))(?:(?:\\d{5}\\)?[\\s-]?\\d{4,5})|(?:\\d{4}\\)?[\\s-]?(?:\\d{5}|\\d{3}[\\s-]?\\d{3}))|(?:\\d{3}\\)?[\\s-]?\\d{3}[\\s-]?\\d{3,4})|(?:\\d{2}\\)?[\\s-]?\\d{4}[\\s-]?\\d{4}))(?:[\\s-]?(?:x|ext\\.?|\\#)\\d{3,4})?$/;\n        // check for correct mobile phone format\n        if(!regex.test(p)) {\n            this.setState({err: true});\n            this.setState({errMsg: 'Enter a valid Phone Number!'});\n            return null;\n        }\n\n        // check if the password is matching with the repeated password\n        if(this.state.password !== this.state.repeatPassword) {\n            this.setState({err: true});\n            this.setState({errMsg: 'Password does not match!'});\n            return null;\n        }\n        // constant user data\n        const user = {\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            emailaddress: this.state.emailaddress,\n            phonenumber: this.state.phonenumber,\n            fulladdress: this.state.fulladdress,\n            password: this.state.password,\n            postCode: this.state.postCode,\n            dateOfBirth: this.state.dateOfBirth,\n        }\n        \n        console.log(user);\n        // axios library to access signup using POST method \n        axios({\n            method: \"POST\",\n            url: \"http://localhost:8080/signup\",\n            data: user,\n        }).then((response) => {\n            console.log(response.status);\n            if (response.status === 201 || response.status === 200) {\n                // show the handle message when the account is registered successfully\n                this.handleShow(\"Thank you! Your account has been registered successfully!\")\n                // reset the form for other entries\n                this.resetForm();\n            } else {\n                \n                console.log(response.status);\n                alert(response)\n            }\n            // catch any errors when found show the error message reponse\n        }).catch((error)=> {\n                const err = error\n                if (err.response) {\n                    this.setState({err: true})\n                    this.setState({errMsg:err.response.data })\n                   console.log(err.response.status)\n                   console.log(err.response.data)\n                }\n             \n        })\n\n    }\n    // hide handle event\n    handleHide() {\n        console.log(\"okay\");\n        this.setState({ show: false });\n    }\n    // show handle event\n    handleShow(daata) {\n        this.setState({msg: daata});\n        this.setState({ show: true });\n    }\n        // date of birth event \n      onDateOfBirthChange(event) {\n        this.setState({dateOfBirth: event.target.value});\n        this.setState({err: false})\n        this.setState({success: false})\n\n      }\n    //   password event\n      onPasswordChange(event) {\n          this.setState({password: event.target.value});\n          this.setState({err: false})\n          \n        this.setState({success: false})\n      }\n    //   repeat password event\n      onRepeatPasswordChange(event) {\n        this.setState({repeatPassword: event.target.value});\n        this.setState({success: false})\n        this.setState({err: false})\n      }\n    //   post code event\n      onPostCodeChange(event) {\n        this.setState({postCode: event.target.value});\n        \n        this.setState({success: false})\n        this.setState({err: false})\n      }\n    //   full address event\n      onFulladdressChange(event) {\n        this.setState({fulladdress: event.target.value});\n        \n        this.setState({success: false})\n        this.setState({err: false})\n      }\n    //   email address event\n      onEmailaddressChange(event) {\n        this.setState({emailaddress: event.target.value});\n        \n        this.setState({success: false})\n        this.setState({err: false})\n      }\n    //   phone number event\n      onPhonenumberChange(event) {\n        this.setState({phonenumber: event.target.value});\n        this.setState({success: false})\n        this.setState({err: false})\n      }\n    //   last name event\n      onLastNameChange(event) {\n        this.setState({lastName: event.target.value});\n        \n        this.setState({success: false})\n        this.setState({err: false})\n      }\n    //   first name event\n      onFirstNameChange(event) {\n        this.setState({firstName: event.target.value});\n        \n        this.setState({success: false})\n        this.setState({err: false})\n      }\n\n      //reset all the following form entries when the resetform() function is called.\n      resetForm() {\n        this.setState({firstName: ''});\n        this.setState({phonenumber: ''});\n        this.setState({lastName: ''});\n        this.setState({dateOfBirth: ''});\n        this.setState({emailaddress: ''});\n        this.setState({fulladdress: ''});\n        this.setState({error: ''});\n        this.setState({postCode: ''});\n        this.setState({repeatPassword: ''});\n        this.setState({password: ''});\n        this.setState({errMsg: ''});\n      }\n\n    //   \n    render() {\n        return (\n            <div class=\"main\">\n\n            {/* model this hides the model and brings back the main screen*/}\n\n<Modal show={this.state.show} onHide={this.handleHide}>\n                    <Modal.Body>{this.state.msg}</Modal.Body>\n                    <Modal.Footer>\n                      {/* close button closes the model */}\n                        <Button variant=\"secondary\" onClick={this.handleHide}>\n                            Close\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n    \n                {/*  */}\n            <div class=\"container container-2\">\n                <div class=\"sign-up-content\">\n                { this.state.err === true &&\n                    <div class=\"alert alert-danger\" role=\"alert\">\n                        {this.state.errMsg}\n                    </div>\n                }\n\n                {/* registration form */}\n                    <form onSubmit={this.handleSubmit.bind(this)} class=\"signup-form\">\n                        <h3 class=\"form-title\">Register</h3>\n                        <br/>\n                        {/* first name input box  */}\n                        <div class=\"form-textbox\">\n                            <label for=\"name\">First Name</label>\n                            <input type=\"text\" \n                                name=\"name\" \n                                id=\"name\" \n                                value={this.state.firstName}\n                                required=\"required\"\n                                // call the firstname change event\n                                onChange={this.onFirstNameChange}\n                                />\n                                \n                        </div>\n                        {/* last name input box */}\n                        <div class=\"form-textbox\">\n                            <label for=\"name\">Last name</label>\n                            <input \n                                type=\"text\" \n                                \n                                value={this.state.lastName}\n                                name=\"lastname\" \n                                id=\"lastname\" \n                                required=\"required\"\n                                // call teh last name change event\n                                onChange={this.onLastNameChange}\n                                />\n                        </div>\n                        {/* email address input box */}\n                        <div class=\"form-textbox\">\n                            <label for=\"email\">Email</label>\n                            <input \n                                type=\"email\" \n                                name=\"emailaddress\" \n                                \n                                value={this.state.emailaddress}\n                                id=\"emailaddress\" \n                                required=\"required\"\n                                // call the email address change event\n                                onChange={this.onEmailaddressChange}/>\n                        </div>\n                        {/* mobile phone number input box */}\n                        <div class=\"form-textbox\">\n                            <label for=\"phonenumber\">Phone</label>\n                            <input \n                                type=\"text\" \n                                name=\"phonenumber\" \n                                id=\"phonenumber\"\n                                \n                                value={this.state.phonenumber}\n                                required=\"required\"\n                                // call the phone number event \n                                onChange={this.onPhonenumberChange}\n                                />\n                        </div>\n    \n                        {/* date of birth input box */}\n                        <div class=\"form-textbox\">\n                            <label for=\"dob\">Date of birth</label>\n                            <input \n                                type=\"Date\" \n                                name=\"dob\" \n                                id=\"dob\"\n                                \n                                value={this.state.dateOfBirth}\n                                required=\"required\"\n                                // call the date of birth change\n                                onChange={this.onDateOfBirthChange}\n                                />\n                        </div>\n    \n                        {/* full address input box */}\n                        <div class=\"form-textbox\">\n                            <label for=\"fulladdress\">Address</label>\n                            <input \n                                type=\"text\" \n                                name=\"fulladdress\" \n                                \n                                value={this.state.fulladdress}\n                                id=\"fulladdress\"\n                                required=\"required\"\n                                // call the full address change event\n                                onChange={this.onFulladdressChange}\n                                />\n                        </div>\n    \n                        {/* post code input box */}\n                        <div class=\"form-textbox\">\n                            <label for=\"postCode\">Post code</label>\n                            <input \n                                type=\"text\" \n                                name=\"postCode\" \n                                \n                                value={this.state.postCode}\n                                id=\"postCode\"\n                                required=\"required\"\n                                // call the post code change event\n                                onChange={this.onPostCodeChange}\n                                />\n                        </div>\n                        {/* password input box */}\n                        <div class=\"form-textbox\">\n                            <label for=\"password\">Password</label>\n                            <input \n                                type=\"password\" \n                                name=\"password\" \n                                \n                                value={this.state.password}\n                                id=\"password\"\n                                required=\"required\"\n                                // call the password change event\n                                onChange={this.onPasswordChange}\n                                />\n                        </div>\n    \n                        {/* repeat password input box */}\n                        <div class=\"form-textbox\">\n                            <label for=\"repeatpassword\">Repeat Password</label>\n                            <input \n                                type=\"password\" \n                                name=\"repeatpassword\" \n                                \n                                value={this.state.repeatPassword}\n                                id=\"repeatpassword\" \n                                required=\"required\"\n                                // call the repeat password change event\n                                onChange={this.onRepeatPasswordChange}\n                                />\n                        </div>\n                        {/* register button division */}\n                        <div class=\"form-textbox mt-3\" >\n                            <button \n                                type=\"submit\" \n                                name=\"submit\" \n                                class=\"submit\" \n                                 >\n                                     Register\n                                     </button>\n\n                        </div>\n                    </form>\n                </div>\n            </div>\n    \n        </div>\n        );\n    }\n\n}\n\nexport default Register;\n","C:\\Users\\Saim\\Downloads\\Donate-Frontend\\src\\components\\About.js",[],{"ruleId":"103","severity":1,"message":"104","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":19},{"ruleId":"103","severity":1,"message":"107","line":12,"column":50,"nodeType":"105","messageId":"106","endLine":12,"endColumn":54},{"ruleId":"103","severity":1,"message":"108","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":14},{"ruleId":"109","severity":1,"message":"110","line":11,"column":3,"nodeType":"111","endLine":11,"endColumn":40},{"ruleId":"112","severity":1,"message":"113","line":12,"column":5,"nodeType":"111","endLine":12,"endColumn":53},{"ruleId":"109","severity":1,"message":"110","line":23,"column":9,"nodeType":"111","endLine":23,"endColumn":54},{"ruleId":"109","severity":1,"message":"110","line":29,"column":9,"nodeType":"111","endLine":29,"endColumn":53},{"ruleId":"109","severity":1,"message":"110","line":32,"column":9,"nodeType":"111","endLine":32,"endColumn":53},{"ruleId":"109","severity":1,"message":"110","line":35,"column":9,"nodeType":"111","endLine":35,"endColumn":53},{"ruleId":"103","severity":1,"message":"108","line":1,"column":8,"nodeType":"105","messageId":"106","endLine":1,"endColumn":14},{"ruleId":"109","severity":1,"message":"110","line":14,"column":11,"nodeType":"111","endLine":14,"endColumn":23},{"ruleId":"109","severity":1,"message":"110","line":18,"column":19,"nodeType":"111","endLine":18,"endColumn":55},{"ruleId":"109","severity":1,"message":"110","line":19,"column":19,"nodeType":"111","endLine":19,"endColumn":54},{"ruleId":"109","severity":1,"message":"110","line":20,"column":19,"nodeType":"111","endLine":20,"endColumn":54},{"ruleId":"109","severity":1,"message":"110","line":27,"column":13,"nodeType":"111","endLine":27,"endColumn":25},{"ruleId":"109","severity":1,"message":"110","line":33,"column":19,"nodeType":"111","endLine":33,"endColumn":54},{"ruleId":"109","severity":1,"message":"110","line":40,"column":11,"nodeType":"111","endLine":40,"endColumn":23},{"ruleId":"109","severity":1,"message":"110","line":45,"column":19,"nodeType":"111","endLine":45,"endColumn":54},{"ruleId":"109","severity":1,"message":"110","line":46,"column":19,"nodeType":"111","endLine":46,"endColumn":54},{"ruleId":"109","severity":1,"message":"110","line":52,"column":11,"nodeType":"111","endLine":52,"endColumn":23},{"ruleId":"109","severity":1,"message":"110","line":56,"column":19,"nodeType":"111","endLine":56,"endColumn":54},{"ruleId":"109","severity":1,"message":"110","line":57,"column":19,"nodeType":"111","endLine":57,"endColumn":54},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"103","severity":1,"message":"118","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":13},{"ruleId":"103","severity":1,"message":"119","line":10,"column":8,"nodeType":"105","messageId":"106","endLine":10,"endColumn":15},{"ruleId":"103","severity":1,"message":"120","line":11,"column":8,"nodeType":"105","messageId":"106","endLine":11,"endColumn":14},{"ruleId":"103","severity":1,"message":"121","line":15,"column":37,"nodeType":"105","messageId":"106","endLine":15,"endColumn":43},{"ruleId":"112","severity":1,"message":"113","line":147,"column":13,"nodeType":"111","endLine":147,"endColumn":62},{"ruleId":"103","severity":1,"message":"122","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":16},{"ruleId":"123","severity":1,"message":"124","line":118,"column":13,"nodeType":"105","messageId":"125","endLine":118,"endColumn":18},{"ruleId":"126","severity":1,"message":"127","line":118,"column":267,"nodeType":"128","messageId":"129","endLine":118,"endColumn":268,"suggestions":"130"},{"ruleId":"123","severity":1,"message":"124","line":72,"column":9,"nodeType":"105","messageId":"125","endLine":72,"endColumn":14},{"ruleId":"126","severity":1,"message":"127","line":72,"column":263,"nodeType":"128","messageId":"129","endLine":72,"endColumn":264,"suggestions":"131"},{"ruleId":"112","severity":1,"message":"113","line":330,"column":17,"nodeType":"111","endLine":330,"endColumn":72},{"ruleId":"103","severity":1,"message":"108","line":3,"column":8,"nodeType":"105","messageId":"106","endLine":3,"endColumn":14},{"ruleId":"109","severity":1,"message":"110","line":118,"column":25,"nodeType":"111","endLine":118,"endColumn":37},{"ruleId":"109","severity":1,"message":"110","line":125,"column":25,"nodeType":"111","endLine":125,"endColumn":37},{"ruleId":"109","severity":1,"message":"110","line":132,"column":25,"nodeType":"111","endLine":132,"endColumn":37},{"ruleId":"123","severity":1,"message":"124","line":75,"column":13,"nodeType":"105","messageId":"125","endLine":75,"endColumn":18},{"ruleId":"126","severity":1,"message":"127","line":75,"column":267,"nodeType":"128","messageId":"129","endLine":75,"endColumn":268,"suggestions":"132"},"no-unused-vars","'Websitetext' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'donate' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-native-reassign",["133"],"no-negated-in-lhs",["134"],"'logo1' is defined but never used.","'Doante1' is defined but never used.","'PayPal' is defined but never used.","'Button' is defined but never used.","'Register' is defined but never used.","no-redeclare","'regex' is already defined.","redeclared","no-useless-escape","Unnecessary escape character: \\#.","Literal","unnecessaryEscape",["135","136"],["137","138"],["139","140"],"no-global-assign","no-unsafe-negation",{"messageId":"141","fix":"142","desc":"143"},{"messageId":"144","fix":"145","desc":"146"},{"messageId":"141","fix":"147","desc":"143"},{"messageId":"144","fix":"148","desc":"146"},{"messageId":"141","fix":"149","desc":"143"},{"messageId":"144","fix":"150","desc":"146"},"removeEscape",{"range":"151","text":"152"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"153","text":"154"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"155","text":"152"},{"range":"156","text":"154"},{"range":"157","text":"152"},{"range":"158","text":"154"},[4437,4438],"",[4437,4437],"\\",[2614,2615],[2614,2614],[3046,3047],[3046,3046]]